<<<<<<< HEAD
name: '1$(Rev:.rr)'
pool:
  vmImage: 'Ubuntu 16.04'
variables:
  Image.Name: 'microsoftlearning/markdown-build'
  Image.Tag.Latest: '$(Image.Name):latest'
  Image.Tag.Version: '$(Image.Name):$(Build.BuildNumber)'
steps:
  - task: Docker@1
    displayName: 'Build Docker Image'
    inputs:
      command: build
      dockerFile: 'Dockerfile'
      imageName: '$(Image.Name)'
      addLatestTag: true
      addDefaultLabels: false
  - task: Docker@1
    displayName: 'Add Version Tag to Image'
    inputs:
      command: tag
      imageName: '$(Image.Tag.Latest)'
      arguments: '$(Image.Tag.Version)'
  - task: Docker@1
    displayName: 'Login to Docker Hub'
    inputs:
      command: login
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'dockerhub-microsoftlearning-organization'
  - task: Docker@1
    displayName: 'Push Versioned Image'
    inputs:
      command: push
      imageName: '$(Image.Tag.Version)'
  - task: Docker@1
    displayName: 'Push Latest Image'
    inputs:
      command: push
      imageName: '$(Image.Tag.Latest)'
=======
name: '$(Date:yyyyMMdd)$(Rev:.rr)'
jobs:
  - job: build_markdown_content
    displayName: 'Build Markdown Content'
    workspace:
      clean: all
    pool:
      vmImage: 'Ubuntu 16.04'
    container:
      image: 'microsoftlearning/markdown-build:latest'
    steps:
      - task: Bash@3
        displayName: 'Build Content'
        inputs:
          targetType: inline
          script: |
            cp /{attribution.md,template.docx,package.json,package.js} .
            npm install
            node package.js --version $(Build.BuildNumber)
      - task: GitHubRelease@0
        displayName: 'Create GitHub Release'
        inputs:
          gitHubConnection: 'github-microsoftlearning-organization'
          repositoryName: '$(Build.Repository.Name)'
          tagSource: manual
          tag: 'v$(Build.BuildNumber)'
          title: 'Version $(Build.BuildNumber)'
          releaseNotesSource: input
          releaseNotes: '# Version $(Build.BuildNumber) Release'
          assets: '$(Build.SourcesDirectory)/out/*.zip'
          assetUploadMode: replace
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Output Files'
        inputs:
          pathtoPublish: '$(Build.SourcesDirectory)/out/'
          artifactName: 'Lab Files'
>>>>>>> course/master
